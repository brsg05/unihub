# Configurações da Aplicação Spring Boot para UniHub

# Configurações do Servidor
server.port=8080

# Configurações do Datasource (PostgreSQL)
# Estas variáveis são idealmente configuradas via ambiente no Docker Compose
spring.datasource.url=jdbc:postgresql://localhost:5433/unihub
spring.datasource.username=postgres
spring.datasource.password=SUA-SENHA
spring.datasource.driver-class-name=org.postgresql.Driver

# Configurações do JPA/Hibernate
spring.jpa.hibernate.ddl-auto=validate
# Mostrar SQL gerado no console (bom para dev)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Para nomenclatura de tabelas e colunas (snake_case)
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# Se quiser usar implicit strategy para snake_case (requer configuração mais detalhada ou dependencia como hibernate-types)
# spring.jpa.hibernate.naming.implicit-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy

# Configurações do Flyway (Migrações de Banco)
spring.flyway.enabled=true
# Locations para os scripts SQL de migração e seed
# classpath:db/migration é o padrão para schemas
# Adicionamos classpath:db/seed para os dados iniciais (deve ser nomeado V2__, V3__ etc. após o último de migration)
spring.flyway.locations=classpath:db/migrations
# Se o schema já existir, o Flyway cria sua tabela de metadados
spring.flyway.baseline-on-migrate=true

# Configurações de Segurança (Spring Security & JWT)
# Estas são placeholders e devem ser configuradas via variáveis de ambiente
app.jwt.secret=uniHubJWTSecretKeyForDevEnvironmentPleaseChange # Changed key and removed ====, ensure this is a secure key for prod
app.jwt.expirationMs=86400000

# Configurações do SpringDoc OpenAPI (Swagger)
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html # Endpoint para a UI do Swagger
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

# Logging
logging.level.org.springframework=INFO
# Nível de log para sua aplicação
logging.level.com.unihub=DEBUG 
logging.level.org.hibernate.SQL=DEBUG
# Para ver valores de parâmetros em SQL
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 

spring.flyway.url=jdbc:postgresql://localhost:5433/unihub
spring.flyway.user=postgres
spring.flyway.password=SUA-SENHA

# Configurações de CORS (Cross-Origin Resource Sharing)
# Permite que o frontend Angular (rodando em localhost:4200) acesse o backend
# Para produção, restrinja para o domínio específico do seu frontend
app.cors.allowed-origins=http://localhost:4200,http://localhost:80